{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/App.vue?f821","webpack:///./src/assets/schema.xsd","webpack:///./src/assets/example.xml","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","domProps","input","on","update","_s","xml","staticRenderFns","attributeNamePrefix","attrNodeName","ignoreAttributes","parseNodeValue","parseAttributeValue","trimValues","decodeHTMLchar","format","indentBy","supressEmptyNode","components","computed","schema","arguments","linter","errors","methods","e","target","htmlEncode","val","replace","component","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.8f9b9d36.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('textarea',{domProps:{\"value\":_vm.input},on:{\"input\":_vm.update}}),_c('textarea',{domProps:{\"innerHTML\":_vm._s(_vm.xml)}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<xs:schema xmlns:xs=\\\"http://www.w3.org/2001/XMLSchema\\\" elementFormDefault=\\\"qualified\\\">\\n    <xs:element name=\\\"OverlayData\\\">\\n        <xs:complexType>\\n            <xs:sequence>\\n                <xs:element ref=\\\"MarkerCategory\\\" minOccurs=\\\"0\\\" maxOccurs=\\\"1\\\"/>\\n                <xs:element ref=\\\"POIs\\\" minOccurs=\\\"0\\\" maxOccurs=\\\"1\\\"/>\\n            </xs:sequence>\\n        </xs:complexType>\\n    </xs:element>\\n    <xs:element name=\\\"POIs\\\">\\n        <xs:complexType>\\n            <xs:choice maxOccurs=\\\"unbounded\\\">\\n                <xs:element ref=\\\"POI\\\"/>\\n                <xs:element ref=\\\"Trail\\\"/>\\n            </xs:choice>\\n        </xs:complexType>\\n    </xs:element>\\n    <xs:element name=\\\"POI\\\">\\n        <xs:complexType>\\n            <!-- region TacO defaults -->\\n            <xs:attribute name=\\\"GUID\\\"/>\\n            <xs:attribute name=\\\"type\\\" type=\\\"xs:NCName\\\"/> <!-- This is not enforced by TacO -->\\n            <xs:attribute name=\\\"MapID\\\" use=\\\"required\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"xpos\\\" use=\\\"required\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"ypos\\\" use=\\\"required\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"zpos\\\" use=\\\"required\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <!-- Icon -->\\n            <xs:attribute name=\\\"iconFile\\\"/>\\n            <xs:attribute name=\\\"iconSize\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <!-- Optional -->\\n            <xs:attribute name=\\\"alpha\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"behaviour\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:nonNegativeInteger\\\">\\n                        <xs:minInclusive value=\\\"0\\\"/>\\n                        <xs:maxInclusive value=\\\"7\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"fadeNear\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"fadeFar\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"heightOffset\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"resetLength\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"resetOffset\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"DisplayName\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"color\\\" type=\\\"xs:string\\\"/> <!-- TODO: Verify it's a hex string -->\\n            <xs:attribute name=\\\"autoTrigger\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"hasCountdown\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"triggerRange\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"maxSize\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"minSize\\\" type=\\\"xs:integer\\\"/>\\n\\n            <!-- Achievement stuff -->\\n            <xs:attribute name=\\\"achievementId\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"achievementBit\\\" type=\\\"xs:integer\\\"/>\\n\\n            <!-- Minimap support -->\\n            <xs:attribute name=\\\"mapDisplaySize\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"miniMapVisibility\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"mapVisibility\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"inGameVisibility\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"scaleOnMapWithZoom\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"mapFadeoutScaleLevel\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"keepOnMapEdge\\\" type=\\\"xs:boolean\\\"/>\\n            <!-- endregion -->\\n\\n            <!-- region Blish -->\\n            <xs:attribute name=\\\"IsSeparator\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"defaultToggle\\\" type=\\\"xs:boolean\\\"/>\\n            <!-- Bounce -->\\n            <xs:attribute name=\\\"bounce-height\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-delay\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-duration\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-distance\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-when\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"always\\\"/>\\n                        <xs:enumeration value=\\\"inzone\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n\\n            <!-- Copy -->\\n            <xs:attribute name=\\\"copy-radius\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"copy-message\\\" type=\\\"xs:string\\\"/>\\n\\n            <!-- Notification -->\\n            <xs:attribute name=\\\"notification\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"notification-distance\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"notification-type\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"info\\\"/>\\n                        <xs:enumeration value=\\\"warning\\\"/>\\n                        <xs:enumeration value=\\\"error\\\"/>\\n                        <xs:enumeration value=\\\"gray\\\"/>\\n                        <xs:enumeration value=\\\"blue\\\"/>\\n                        <xs:enumeration value=\\\"green\\\"/>\\n                        <xs:enumeration value=\\\"red\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n\\n            <!-- Rotate -->\\n            <xs:attribute name=\\\"rotate-x\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"rotate-y\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"rotate-z\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <!-- Title -->\\n            <xs:attribute name=\\\"title\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"title-color\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"white\\\"/>\\n                        <xs:enumeration value=\\\"yellow\\\"/>\\n                        <xs:enumeration value=\\\"red\\\"/>\\n                        <xs:enumeration value=\\\"green\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n\\n            <!-- MumbleLink -->\\n            <xs:attribute name=\\\"mount\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"\\\"/> <!-- No mount -->\\n                        <xs:enumeration value=\\\"0\\\"/> <!-- No mount -->\\n                        <xs:enumeration value=\\\"raptor\\\"/>\\n                        <xs:enumeration value=\\\"springer\\\"/>\\n                        <xs:enumeration value=\\\"skimmer\\\"/>\\n                        <xs:enumeration value=\\\"jackal\\\"/>\\n                        <xs:enumeration value=\\\"griffon\\\"/>\\n                        <xs:enumeration value=\\\"rollerbeetle\\\"/> <!-- TODO: Is this correct? -->\\n                        <xs:enumeration value=\\\"warclaw\\\"/>\\n                        <xs:enumeration value=\\\"skyscale\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"race\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"asura\\\"/>\\n                        <xs:enumeration value=\\\"charr\\\"/>\\n                        <xs:enumeration value=\\\"human\\\"/>\\n                        <xs:enumeration value=\\\"norn\\\"/>\\n                        <xs:enumeration value=\\\"sylvari\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"profession\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"guardian\\\"/>\\n                        <xs:enumeration value=\\\"revenant\\\"/>\\n                        <xs:enumeration value=\\\"warrior\\\"/>\\n                        <xs:enumeration value=\\\"engineer\\\"/>\\n                        <xs:enumeration value=\\\"ranger\\\"/>\\n                        <xs:enumeration value=\\\"thief\\\"/>\\n                        <xs:enumeration value=\\\"elementalist\\\"/>\\n                        <xs:enumeration value=\\\"mesmer\\\"/>\\n                        <xs:enumeration value=\\\"necromancer\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"specialization\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:integer\\\">\\n                        <xs:enumeration value=\\\"5\\\"/> <!-- Druid -->\\n                        <xs:enumeration value=\\\"7\\\"/> <!-- Daredevil -->\\n                        <xs:enumeration value=\\\"18\\\"/> <!-- Berserker -->\\n                        <xs:enumeration value=\\\"27\\\"/> <!-- Dragonhunter -->\\n                        <xs:enumeration value=\\\"34\\\"/> <!-- Reaper -->\\n                        <xs:enumeration value=\\\"40\\\"/> <!-- Chronomancer -->\\n                        <xs:enumeration value=\\\"43\\\"/> <!-- Scrapper -->\\n                        <xs:enumeration value=\\\"48\\\"/> <!-- Tempest -->\\n                        <xs:enumeration value=\\\"52\\\"/> <!-- Herald -->\\n                        <xs:enumeration value=\\\"55\\\"/> <!-- Soulbeast -->\\n                        <xs:enumeration value=\\\"56\\\"/> <!-- Weaver -->\\n                        <xs:enumeration value=\\\"57\\\"/> <!-- Holosmith -->\\n                        <xs:enumeration value=\\\"58\\\"/> <!-- Deadeye -->\\n                        <xs:enumeration value=\\\"59\\\"/> <!-- Mirage -->\\n                        <xs:enumeration value=\\\"60\\\"/> <!-- Scourge -->\\n                        <xs:enumeration value=\\\"61\\\"/> <!-- Spellbreaker -->\\n                        <xs:enumeration value=\\\"62\\\"/> <!-- Firebrand -->\\n                        <xs:enumeration value=\\\"63\\\"/> <!-- Renegade -->\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <!-- endregion -->\\n        </xs:complexType>\\n    </xs:element>\\n    <xs:element name=\\\"Trail\\\">\\n        <xs:complexType>\\n            <!-- TacO defaults -->\\n            <xs:attribute name=\\\"GUID\\\"/>\\n\\n            <xs:attribute name=\\\"color\\\" type=\\\"xs:string\\\"/> <!-- TODO: Verify it's a hex string -->\\n            <xs:attribute name=\\\"type\\\" use=\\\"required\\\" type=\\\"xs:NCName\\\"/>\\n            <xs:attribute name=\\\"alpha\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"fadeNear\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"fadeFar\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <xs:attribute name=\\\"trailData\\\" use=\\\"required\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"texture\\\" use=\\\"required\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"animSpeed\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"trailScale\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <!-- Blish? -->\\n<!--            <xs:attribute name=\\\"heightOffset\\\" type=\\\"xs:decimal\\\"/>-->\\n            <xs:attribute name=\\\"maxSize\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"minSize\\\" type=\\\"xs:integer\\\"/>\\n        </xs:complexType>\\n    </xs:element>\\n    <xs:element name=\\\"MarkerCategory\\\">\\n        <xs:complexType>\\n            <xs:sequence>\\n                <xs:element minOccurs=\\\"0\\\" maxOccurs=\\\"unbounded\\\" ref=\\\"MarkerCategory\\\"/>\\n            </xs:sequence>\\n\\n            <!-- region TacO defaults -->\\n            <xs:attribute name=\\\"name\\\" use=\\\"required\\\" type=\\\"xs:NCName\\\"/>\\n\\n            <!-- Icon -->\\n            <xs:attribute name=\\\"iconFile\\\"/>\\n            <xs:attribute name=\\\"iconSize\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <!-- Optional -->\\n            <xs:attribute name=\\\"alpha\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"behaviour\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:nonNegativeInteger\\\">\\n                        <xs:minInclusive value=\\\"0\\\"/>\\n                        <xs:maxInclusive value=\\\"7\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"fadeNear\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"fadeFar\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"heightOffset\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"resetLength\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"resetOffset\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"DisplayName\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"color\\\" type=\\\"xs:string\\\"/> <!-- TODO: Verify it's a hex string -->\\n            <xs:attribute name=\\\"autoTrigger\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"hasCountdown\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"triggerRange\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"maxSize\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"minSize\\\" type=\\\"xs:integer\\\"/>\\n\\n            <!-- Achievement stuff -->\\n            <xs:attribute name=\\\"achievementId\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"achievementBit\\\" type=\\\"xs:integer\\\"/>\\n\\n            <!-- Minimap support -->\\n            <xs:attribute name=\\\"mapDisplaySize\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"miniMapVisibility\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"mapVisibility\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"inGameVisibility\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"scaleOnMapWithZoom\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"mapFadeoutScaleLevel\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"keepOnMapEdge\\\" type=\\\"xs:boolean\\\"/>\\n            <!-- endregion -->\\n\\n            <!-- region Blish -->\\n            <xs:attribute name=\\\"IsSeparator\\\" type=\\\"xs:boolean\\\"/>\\n            <xs:attribute name=\\\"defaultToggle\\\" type=\\\"xs:boolean\\\"/>\\n            <!-- Bounce -->\\n            <xs:attribute name=\\\"bounce-height\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-delay\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-duration\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-distance\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"bounce-when\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"always\\\"/>\\n                        <xs:enumeration value=\\\"inzone\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n\\n            <!-- Copy -->\\n            <xs:attribute name=\\\"copy-radius\\\" type=\\\"xs:integer\\\"/>\\n            <xs:attribute name=\\\"copy-message\\\" type=\\\"xs:string\\\"/>\\n\\n            <!-- Notification -->\\n            <xs:attribute name=\\\"notification\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"notification-distance\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"notification-type\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"info\\\"/>\\n                        <xs:enumeration value=\\\"warning\\\"/>\\n                        <xs:enumeration value=\\\"error\\\"/>\\n                        <xs:enumeration value=\\\"gray\\\"/>\\n                        <xs:enumeration value=\\\"blue\\\"/>\\n                        <xs:enumeration value=\\\"green\\\"/>\\n                        <xs:enumeration value=\\\"red\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n\\n            <!-- Rotate -->\\n            <xs:attribute name=\\\"rotate-x\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"rotate-y\\\" type=\\\"xs:decimal\\\"/>\\n            <xs:attribute name=\\\"rotate-z\\\" type=\\\"xs:decimal\\\"/>\\n\\n            <!-- Title -->\\n            <xs:attribute name=\\\"title\\\" type=\\\"xs:string\\\"/>\\n            <xs:attribute name=\\\"title-color\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"white\\\"/>\\n                        <xs:enumeration value=\\\"yellow\\\"/>\\n                        <xs:enumeration value=\\\"red\\\"/>\\n                        <xs:enumeration value=\\\"green\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n\\n            <!-- MumbleLink -->\\n            <xs:attribute name=\\\"mount\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"\\\"/> <!-- No mount -->\\n                        <xs:enumeration value=\\\"0\\\"/> <!-- No mount -->\\n                        <xs:enumeration value=\\\"raptor\\\"/>\\n                        <xs:enumeration value=\\\"springer\\\"/>\\n                        <xs:enumeration value=\\\"skimmer\\\"/>\\n                        <xs:enumeration value=\\\"jackal\\\"/>\\n                        <xs:enumeration value=\\\"griffon\\\"/>\\n                        <xs:enumeration value=\\\"rollerbeetle\\\"/> <!-- TODO: Is this correct? -->\\n                        <xs:enumeration value=\\\"warclaw\\\"/>\\n                        <xs:enumeration value=\\\"skyscale\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"race\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"asura\\\"/>\\n                        <xs:enumeration value=\\\"charr\\\"/>\\n                        <xs:enumeration value=\\\"human\\\"/>\\n                        <xs:enumeration value=\\\"norn\\\"/>\\n                        <xs:enumeration value=\\\"sylvari\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"profession\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:string\\\">\\n                        <xs:enumeration value=\\\"guardian\\\"/>\\n                        <xs:enumeration value=\\\"revenant\\\"/>\\n                        <xs:enumeration value=\\\"warrior\\\"/>\\n                        <xs:enumeration value=\\\"engineer\\\"/>\\n                        <xs:enumeration value=\\\"ranger\\\"/>\\n                        <xs:enumeration value=\\\"thief\\\"/>\\n                        <xs:enumeration value=\\\"elementalist\\\"/>\\n                        <xs:enumeration value=\\\"mesmer\\\"/>\\n                        <xs:enumeration value=\\\"necromancer\\\"/>\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <xs:attribute name=\\\"specialization\\\">\\n                <xs:simpleType>\\n                    <xs:restriction base=\\\"xs:integer\\\">\\n                        <xs:enumeration value=\\\"5\\\"/> <!-- Druid -->\\n                        <xs:enumeration value=\\\"7\\\"/> <!-- Daredevil -->\\n                        <xs:enumeration value=\\\"18\\\"/> <!-- Berserker -->\\n                        <xs:enumeration value=\\\"27\\\"/> <!-- Dragonhunter -->\\n                        <xs:enumeration value=\\\"34\\\"/> <!-- Reaper -->\\n                        <xs:enumeration value=\\\"40\\\"/> <!-- Chronomancer -->\\n                        <xs:enumeration value=\\\"43\\\"/> <!-- Scrapper -->\\n                        <xs:enumeration value=\\\"48\\\"/> <!-- Tempest -->\\n                        <xs:enumeration value=\\\"52\\\"/> <!-- Herald -->\\n                        <xs:enumeration value=\\\"55\\\"/> <!-- Soulbeast -->\\n                        <xs:enumeration value=\\\"56\\\"/> <!-- Weaver -->\\n                        <xs:enumeration value=\\\"57\\\"/> <!-- Holosmith -->\\n                        <xs:enumeration value=\\\"58\\\"/> <!-- Deadeye -->\\n                        <xs:enumeration value=\\\"59\\\"/> <!-- Mirage -->\\n                        <xs:enumeration value=\\\"60\\\"/> <!-- Scourge -->\\n                        <xs:enumeration value=\\\"61\\\"/> <!-- Spellbreaker -->\\n                        <xs:enumeration value=\\\"62\\\"/> <!-- Firebrand -->\\n                        <xs:enumeration value=\\\"63\\\"/> <!-- Renegade -->\\n                    </xs:restriction>\\n                </xs:simpleType>\\n            </xs:attribute>\\n            <!-- endregion -->\\n        </xs:complexType>\\n    </xs:element>\\n</xs:schema>\\n\";","export default \"<OverlayData>\\r\\n    <MarkerCategory name=\\\"Test\\\">\\r\\n        <MarkerCategory name=\\\"Separator\\\" IsSeparator=\\\"1\\\">\\r\\n        </MarkerCategory>\\r\\n        <MarkerCategory name=\\\"A1\\\" DisplayName=\\\"None\\\" fadeFar=\\\"2500\\\" fadeNear=\\\"2250\\\" iconSize=\\\"0.5\\\"/>\\r\\n        <MarkerCategory name=\\\"B1\\\" DisplayName=\\\"def\\\" fadeFar=\\\"2500\\\" fadeNear=\\\"2250\\\" iconSize=\\\"0.5\\\" defaultToggle=\\\"0\\\"/>\\r\\n        <MarkerCategory name=\\\"C1\\\" DisplayName=\\\"abc-2\\\" fadeFar=\\\"2500\\\" fadeNear=\\\"2250\\\" iconSize=\\\"0.5\\\" defaultToggle=\\\"0\\\"/>\\r\\n    </MarkerCategory>\\r\\n    <POIs>\\r\\n        <POI MapID=\\\"1337\\\" xpos=\\\"1\\\" ypos=\\\"2\\\" zpos=\\\"3\\\" GUID=\\\"0\\\" type=\\\"Test.A1\\\" rotate-z=\\\"30\\\"/>\\r\\n    </POIs>\\r\\n</OverlayData>\\r\\n\";","<template>\n  <div id=\"app\">\n    <textarea :value=\"input\" @input=\"update\"></textarea>\n    <textarea v-html=\"xml\"></textarea>\n  </div>\n</template>\n\n<script>\nimport debounce from 'lodash.debounce'\nimport parser from 'fast-xml-parser'\nimport xmllint from 'xmllint'\n\nimport schema from '@/assets/schema.xsd'\nimport example from '@/assets/example.xml'\n\n// TODO: https://www.npmjs.com/package/xml-formatter\n\nconst parserConfig = {\n  attributeNamePrefix: '',\n  attrNodeName: '@',\n  ignoreAttributes: false,\n  parseNodeValue: true,\n  parseAttributeValue: true,\n  trimValues: true,\n  decodeHTMLchar: false,\n  format: true,\n  indentBy: '  ',\n  supressEmptyNode: false\n}\n\nexport default {\n  name: 'app',\n  components: {},\n  data: () => ({\n    input: example\n  }),\n  computed: {\n    xml() {\n      let lintData = {\n        xml: this.input,\n        schema: schema,\n        arguments: ['--schema', 'file.xsd', 'file.xml']\n      }\n\n      let linter = xmllint.validateXML(lintData)\n\n      if (linter.errors) {\n        return linter.errors\n      }\n      return parser.parse(this.input, parserConfig)\n    }\n  },\n  methods: {\n    update: debounce(function(e) {\n      this.input = e.target.value\n    }, 300),\n    htmlEncode: function(val) {\n      return val.replace('<', '&lt;').replace('>', '&gt;')\n    }\n  }\n}\n</script>\n\n<style>\nhtml,\nbody,\n#app {\n  margin: 0;\n  height: 99.9%; /* Let's cheat a bit */\n  font-family: 'Helvetica Neue', Arial, sans-serif;\n  color: #333;\n}\n\ntextarea,\n#app div {\n  display: inline-block;\n  width: 49%;\n  height: 100%;\n  vertical-align: top;\n  box-sizing: border-box;\n  padding: 0 20px;\n}\n\ntextarea {\n  border: none;\n  border-right: 1px solid #ccc;\n  resize: none;\n  outline: none;\n  background-color: #f6f6f6;\n  font-size: 14px;\n  font-family: 'Monaco', courier, monospace;\n  padding: 20px;\n}\n\ncode {\n  color: #f66;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=537bc966&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n"],"sourceRoot":""}